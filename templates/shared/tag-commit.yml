parameters:
  githubPat: ""

steps:
- powershell: |
    function Render-Body { $input | foreach{@{value=$_}} | Format-Table -Property @{Expression={" "}},value -HideTableHeader -wrap}

    # Create new tag
    "Tagging commit:"      
    $commitAuthorName = git show --pretty="%an" --quiet
    if($lastExitCode -ne 0){
      throw "Failed to retrieve author name from commit."
    }
    "    Commit author name: " + $commitAuthorName
    git config user.name $commitAuthorName
    
    $commitAuthorEmail = git show --pretty="%ae" --quiet
    if($lastExitCode -ne 0){
      throw "Failed to retrieve author email from commit."
    }
    "    Commit author email: " + $commitAuthorEmail
    git config user.email $commitAuthorEmail

    $message = git tag -a $env:NEWVERSION -m "Azure build ID: $env:BUILDID" 2>&1
    $message | Render-Body
    if($lastExitCode -ne 0){
      if($message -ne $null -and $message.ToString().Contains("already exists")){
        "    Tag already exists."
        exit 0
      }
      throw "Failed to tag commit."
    }

    # Push to Github
    $uri = $env:BUILD_REPOSITORY_URI -replace "github.com", "${{parameters.githubPat}}@github.com"
    "`nPushing tag to Github ($uri):"
    git push -u $uri $env:NEWVERSION -q | Render-Body

    if($lastExitCode -ne 0){
      throw "An error occurred while attempting to push tag $env:NEWVERSION to Github."
    }
    "    Tag $env:NEWVERSION pushed to Github."
  # TODO Github displays all tags as releases, there is an issue for this - https://github.community/t5/How-to-use-Git-and-GitHub/Tag-without-release/m-p/7906. At present, tagging every CI version clutters up the
  # release tab. Consider tagging all CI versions if it gets resolved.
  condition: and(succeeded(), eq(variables['newVersionIsRelease'], 'true')) # If previous tasks succeeded and a new release version was found
  displayName: "Tag commit"